package com.example.user.popularmoviesapp.activities;import android.content.Context;import android.content.Intent;import android.content.res.Resources;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.net.Uri;import android.os.AsyncTask;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.DefaultItemAnimator;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.ProgressBar;import android.widget.TextView;import com.example.user.popularmoviesapp.Helper.Constants;import com.example.user.popularmoviesapp.adapters.MoviesAdapter;import com.example.user.popularmoviesapp.R;import com.example.user.popularmoviesapp.model.Movies;import com.example.user.popularmoviesapp.model.MoviesList;import com.example.user.popularmoviesapp.network.TmdbRestClient;import java.util.ArrayList;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;public class MainActivity extends AppCompatActivity {    @BindView(R.id.recyclerview)    RecyclerView recyclerView;    @BindView(R.id.tv_empty_tv)    TextView mEmptyView;    @BindView(R.id.gv_pb_indicator)    ProgressBar mLoaderIndicator;    private Boolean isConnected;    private MoviesAdapter mMoviesAdapter;    private ArrayList<Movies> moviesList;    private static final String TAG = MainActivity.class.getSimpleName();    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolBar);        setSupportActionBar(toolbar);        ButterKnife.bind(this);        recyclerView.setLayoutManager(new GridLayoutManager(this,2));        ConnectivityManager connectivityManager = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);        NetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();        isConnected = activeNetwork != null && activeNetwork.isConnectedOrConnecting();        loadMoviesSorted();    }    private void loadMoviesSorted()    {        if(isConnected)        {            Call<MoviesList> moviesCall = TmdbRestClient.getInstance()                    .getSortMoviesResponse()                    .getSortedMovies(Constants.MOVIE_SORT_POPULAR);            mLoaderIndicator.setVisibility(View.VISIBLE);            moviesCall.enqueue(new Callback<MoviesList>() {                @Override                public void onResponse(Call<MoviesList> call, Response<MoviesList> response) {                    mLoaderIndicator.setVisibility(View.GONE);                    List<Movies> movies = response.body().getResults();                    recyclerView.setAdapter(new MoviesAdapter(getApplicationContext(),movies));                    recyclerView.smoothScrollToPosition(0);                    recyclerView.setItemAnimator(new DefaultItemAnimator());                }                @Override                public void onFailure(Call<MoviesList> call, Throwable t) {                    mLoaderIndicator.setVisibility(View.GONE);                    Log.e(TAG,t.getMessage());                    mEmptyView.setText(getResources().getString(R.string.error_in_callback));                }            });        }else        {            mEmptyView.setText(getResources().getString(R.string.no_internet_connection));        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu)    {        getMenuInflater().inflate(R.menu.main,menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item)    {        int id = item.getItemId();        if(id == R.id.menu_action_settings)        {            Intent startSettingsIntent = new Intent(this,SettingsActivity.class);            startActivity(startSettingsIntent);            return true;        }        return super.onOptionsItemSelected(item);    }}